var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/classes/ApiException.html",[0,0.084,1,1.65]],["body/classes/ApiException.html",[0,0.078,1,2.132,2,0.91,3,0.364,4,0.313,5,0.313,6,2.292,7,3.188,8,3.666,9,0.313,10,1.549,11,2.883,12,3.666,13,4.165,14,1.399,15,4.814,16,4.814,17,1.968,18,3.873,19,1.756,20,1.088,21,3.873,22,0.91,23,0.039,24,0.599,25,0.668,26,0.91,27,3.136,28,2.784,29,2.784,30,1.399,31,2.784,32,0.507,33,2.292,34,0.599,35,1.968,36,0.364,37,2.784,38,2.784,39,3.873,40,3.873,41,2.784,42,1.399,43,0.018,44,0.025,45,0.018]],["title/modules/AppModule.html",[46,1.329,47,1.858]],["body/modules/AppModule.html",[0,0.078,3,0.364,4,0.313,5,0.313,23,0.039,32,0.717,34,0.599,36,0.364,43,0.018,44,0.025,45,0.018,46,1.973,47,3.493,48,1.372,49,1.533,50,1.968,51,1.968,52,1.533,53,2.76,54,1.726,55,2.292,56,2.292,57,2.292,58,2.883,59,2.883,60,2.581,61,2.737,62,1.968,63,1.968,64,2.784,65,2.132,66,2.76,67,3.188,68,2.784,69,1.726,70,2.784,71,2.784,72,2.737,73,2.292,74,2.292,75,2.784,76,2.401,77,2.784,78,2.784,79,2.784]],["title/controllers/AuthController.html",[80,1.65,81,1.858]],["body/controllers/AuthController.html",[0,0.084,3,0.393,4,0.338,5,0.338,9,0.338,14,1.474,20,0.646,22,0.981,23,0.039,24,0.646,25,0.45,26,0.981,30,1.085,32,0.68,34,0.646,36,0.393,42,1.085,43,0.019,44,0.026,45,0.019,65,1.652,80,1.652,81,2.528,82,2.471,83,2.471,84,3.001,85,2.55,86,3.357,87,2.471,88,2.735,89,1.33,90,2.471,91,4.078,92,3.001,93,2.245,94,2.883,95,1.652,96,2.471,97,2.471,98,2.471,99,2.471,100,2.282,101,2.471,102,2.471,103,3.357,104,1.33,105,3.001,106,3.001,107,2.471,108,1.652,109,2.471,110,3.001,111,1.652,112,3.001]],["title/modules/AuthModule.html",[46,1.329,58,1.65]],["body/modules/AuthModule.html",[0,0.081,3,0.379,4,0.326,5,0.326,23,0.039,32,0.71,34,0.623,36,0.379,43,0.019,44,0.026,45,0.019,46,2.014,48,1.426,49,1.593,50,2.046,51,2.046,52,1.593,53,2.818,54,1.794,58,3.045,61,2.812,62,2.046,63,2.046,65,2.19,67,2.383,73,2.383,76,2.466,81,2.818,100,2.612,101,2.383,113,2.383,114,2.383,115,2.918,116,2.894,117,2.383,118,2.046,119,2.894,120,2.466,121,2.894,122,2.894,123,2.894,124,2.894,125,2.894,126,2.894,127,2.894]],["title/injectables/AuthService.html",[100,1.477,128,1.329]],["body/injectables/AuthService.html",[0,0.062,1,1.81,3,0.29,4,0.25,5,0.25,9,0.25,11,1.81,14,1.188,17,2.324,20,0.843,22,1.281,23,0.039,24,1.08,25,0.588,26,1.281,30,1.188,32,0.657,34,0.477,36,0.29,42,1.188,43,0.025,44,0.021,45,0.014,85,2.157,86,2.707,87,2.707,88,2.386,93,2.157,95,1.81,96,1.826,99,1.826,100,1.62,108,1.81,111,1.221,117,3.569,118,1.567,128,1.457,129,1.375,130,1.826,131,3.288,132,2.218,133,4.849,134,2.77,135,3.569,136,2.218,137,2.218,138,3.288,139,2.218,140,1.567,141,1.375,142,1.093,143,1.826,144,2.218,145,1.826,146,3.006,147,2.429,148,2.324,149,1.826,150,1.375,151,1.567,152,1.375,153,2.707,154,2.218,155,1.826,156,2.324,157,2.218,158,1.826,159,2.218,160,2.218]],["title/interfaces/BaseResponse.html",[161,1.65,162,1.858]],["body/interfaces/BaseResponse.html",[0,0.078,3,0.364,4,0.313,5,0.313,9,0.313,10,1.549,19,1.455,23,0.039,25,0.722,27,1.726,32,0.63,34,0.599,35,1.968,36,0.507,42,1.399,43,0.018,44,0.025,45,0.018,93,2.785,94,1.968,161,1.533,162,2.401,163,2.784,164,1.968,165,3.576,166,2.785,167,3.136,168,2.451,169,3.666,170,3.148,171,3.188,172,3.188,173,3.188,174,2.292,175,2.292,176,3.188,177,1.968,178,1.726,179,1.726,180,2.292,181,2.292,182,1.968,183,2.292,184,2.292,185,2.292,186,1.533]],["title/classes/CatVO.html",[0,0.084,187,1.65]],["body/classes/CatVO.html",[0,0.092,2,1.073,3,0.43,4,0.37,5,0.37,9,0.37,10,1.732,19,1.684,20,1.043,23,0.039,24,1.043,25,0.727,32,0.43,36,0.43,43,0.021,44,0.028,45,0.021,89,2.148,104,1.456,168,2.385,187,2.385,188,2.704,189,3.99,190,3.99,191,4.41,192,3.285,193,3.285,194,3.285,195,2.685,196,2.036]],["title/controllers/CatsController.html",[66,1.858,80,1.65]],["body/controllers/CatsController.html",[0,0.076,3,0.353,4,0.304,5,0.304,9,0.304,14,1.37,20,0.816,22,0.883,23,0.039,24,0.581,25,0.405,26,0.883,30,1.37,32,0.679,34,0.581,36,0.353,42,0.976,43,0.017,44,0.025,45,0.017,60,2.159,65,1.487,66,2.351,69,1.675,74,2.224,80,1.487,83,2.224,89,1.681,90,3.122,97,2.224,98,2.224,102,2.224,103,3.607,104,1.197,107,2.224,108,1.487,109,3.122,187,2.412,197,2.224,198,2.224,199,3.122,200,3.911,201,2.702,202,2.945,203,3.792,204,2.702,205,3.792,206,2.68,207,3.792,208,2.702,209,2.702,210,3.792,211,2.702,212,2.702,213,2.224,214,2.702,215,2.702,216,2.702,217,2.702,218,2.702,219,2.702]],["title/injectables/CatsService.html",[60,1.477,128,1.329]],["body/injectables/CatsService.html",[0,0.086,3,0.401,4,0.345,5,0.345,9,0.345,10,1.654,11,2.577,14,1.495,20,1.007,22,1.001,23,0.039,24,0.659,25,0.62,26,1.001,30,1.495,32,0.541,34,0.659,36,0.401,42,1.107,43,0.02,44,0.027,45,0.02,60,2.038,108,2.577,128,1.833,129,1.9,187,3.086,198,3.854,199,3.405,200,4.126,206,2.166,213,2.523,220,2.523,221,4.136,222,3.064,223,3.064,224,3.064,225,2.523,226,2.166,227,3.064,228,3.064,229,3.064]],["title/classes/CreateCatReq.html",[0,0.084,202,1.858]],["body/classes/CreateCatReq.html",[0,0.094,2,0.74,3,0.296,4,0.255,5,0.255,9,0.255,10,1.336,19,1.597,20,0.854,23,0.04,24,0.854,25,0.758,32,0.437,36,0.296,43,0.015,44,0.022,45,0.015,89,1.759,104,1.004,166,2.915,168,2.411,186,2.69,189,3.267,190,3.267,195,2.715,196,3.03,202,2.071,230,1.865,231,2.266,232,3.267,233,4.024,234,3.606,235,2.266,236,1.865,237,2.75,238,2.266,239,3.341,240,2.266,241,2.266,242,3.341,243,3.606,244,2.266,245,2.75,246,2.75,247,2.266,248,3.341,249,3.267,250,1.865,251,3.267,252,3.341,253,1.405,254,2.266,255,3.267]],["title/modules/DatabaseModule.html",[46,1.329,59,1.65]],["body/modules/DatabaseModule.html",[0,0.112,3,0.521,4,0.449,5,0.449,23,0.038,32,0.641,34,0.857,36,0.521,43,0.026,44,0.032,45,0.026,46,2.171,48,1.963,53,2.47,54,2.47,59,2.697,256,3.984,257,4.899,258,3.75,259,3.984]],["title/injectables/JwtStrategy.html",[115,1.65,128,1.329]],["body/injectables/JwtStrategy.html",[0,0.072,3,0.334,4,0.287,5,0.287,7,2.1,9,0.287,11,1.404,14,1.316,17,2.574,20,0.783,22,1.19,23,0.039,24,0.996,25,0.546,26,1.19,30,0.922,32,0.666,34,0.549,36,0.334,42,0.922,43,0.016,44,0.024,45,0.016,69,1.581,85,2.337,108,1.404,111,1.404,115,2.004,120,2.257,128,1.614,129,1.581,134,2.574,135,3.812,140,1.803,141,1.581,142,1.257,143,2.1,145,2.1,146,2.257,148,2.574,149,2.1,150,1.581,151,1.803,152,1.581,155,3.495,260,2.1,261,2.997,262,2.551,263,2.551,264,3.641,265,4.246,266,4.63,267,2.551,268,3.641,269,2.551,270,2.551,271,2.551,272,2.1,273,1.581,274,2.551,275,2.551,276,2.551,277,2.551,278,2.551,279,2.551,280,2.1,281,2.551]],["title/classes/LoginReq.html",[0,0.084,88,1.65]],["body/classes/LoginReq.html",[0,0.106,2,0.873,3,0.349,4,0.301,5,0.301,9,0.301,10,1.505,19,1.689,20,0.809,23,0.039,24,0.937,25,0.709,32,0.492,36,0.349,43,0.017,44,0.024,45,0.017,88,2.071,89,1.668,104,1.184,147,2.7,166,2.846,186,2.603,195,2.7,196,2.931,232,3.098,233,3.892,236,2.2,237,3.098,245,3.098,246,3.098,249,3.586,250,2.2,251,3.586,253,1.656,255,3.098,282,2.2,283,3.763,284,4.728,285,2.672,286,3.763,287,3.763,288,2.672,289,3.763,290,2.672,291,2.672]],["title/classes/LoginUserInfoVO.html",[0,0.084,95,1.65]],["body/classes/LoginUserInfoVO.html",[0,0.094,2,1.088,3,0.436,4,0.375,5,0.375,9,0.375,10,1.748,19,1.804,20,1.05,23,0.039,24,1.05,25,0.732,32,0.436,36,0.436,43,0.022,44,0.028,45,0.022,89,2.162,95,2.406,104,1.476,153,3.598,156,3.449,158,4.017,191,4.546,195,2.064,273,2.71,292,2.741,293,3.33,294,3.33,295,3.33]],["title/classes/ParamsValidationPipe.html",[0,0.084,296,2.119]],["body/classes/ParamsValidationPipe.html",[0,0.114,1,1.887,2,0.766,3,0.307,4,0.264,5,0.264,9,0.264,11,2.229,14,1.239,19,0.766,20,0.737,22,1.12,23,0.04,24,0.737,25,0.514,26,1.12,30,1.239,32,0.583,34,0.505,36,0.307,42,1.463,43,0.015,44,0.022,45,0.015,85,2.229,111,1.291,146,2.761,151,1.658,152,1.454,168,1.291,170,2.862,179,2.125,226,3.148,253,1.454,261,1.931,296,2.423,297,1.931,298,4.05,299,3.427,300,3.427,301,3.427,302,2.346,303,4.454,304,3.427,305,3.667,306,4.454,307,2.346,308,2.346,309,2.346,310,1.931,311,2.346,312,2.346,313,2.822,314,2.346,315,2.346,316,2.346,317,2.346,318,1.931,319,2.346,320,2.346,321,3.427,322,2.346,323,2.346,324,2.346,325,2.346,326,1.931,327,2.346]],["title/classes/ResponseErrorExceptionFilter.html",[0,0.084,328,2.119]],["body/classes/ResponseErrorExceptionFilter.html",[0,0.076,2,0.886,3,0.355,4,0.305,5,0.305,8,4.125,9,0.305,12,3.13,13,3.13,14,1.374,20,0.583,22,0.886,23,0.039,24,0.583,25,0.57,26,0.886,30,0.98,32,0.355,33,2.232,34,0.583,36,0.355,43,0.018,44,0.025,45,0.018,93,1.493,146,3.307,165,1.917,166,2.417,167,1.681,179,2.357,206,1.917,243,2.232,280,2.232,328,2.687,329,2.232,330,4.39,331,4.39,332,3.802,333,3.614,334,4.759,335,2.712,336,4.759,337,2.712,338,2.712,339,2.712,340,2.712,341,2.712,342,2.712,343,2.712,344,2.712,345,2.712,346,2.712,347,3.802,348,2.712,349,2.712,350,2.712,351,2.712,352,2.712,353,2.712,354,2.712,355,2.712,356,2.712]],["title/classes/ResponseSuccessTransformInterceptor.html",[0,0.084,178,1.858]],["body/classes/ResponseSuccessTransformInterceptor.html",[0,0.08,2,0.924,3,0.37,4,0.318,5,0.318,9,0.318,14,1.414,19,0.924,20,0.608,22,0.924,23,0.039,24,0.608,25,0.424,26,0.924,27,1.753,30,1.022,32,0.634,34,0.608,35,1.998,36,0.512,42,1.414,43,0.018,44,0.025,45,0.018,93,2.155,94,2.767,161,1.556,162,1.753,164,1.998,165,2.767,166,2.155,167,2.426,168,1.556,169,2.327,170,1.998,171,3.696,172,3.989,173,3.989,174,2.327,175,2.327,176,3.696,177,1.998,178,2.426,179,2.426,180,3.696,181,3.222,182,3.173,183,2.327,184,2.327,185,2.327,186,1.556,357,2.827,358,2.827]],["title/classes/Users.html",[0,0.084,142,1.477]],["body/classes/Users.html",[0,0.064,2,0.743,3,0.297,4,0.256,5,0.256,9,0.256,10,1.339,19,1.889,20,1.176,23,0.039,25,0.82,32,0.297,36,0.297,43,0.015,44,0.022,45,0.015,89,2.422,141,1.409,142,1.65,147,2.465,148,2.367,150,2.465,156,2.81,326,2.757,359,1.871,360,3.976,361,3.976,362,3.976,363,3.976,364,3.976,365,3.976,366,3.976,367,3.976,368,3.976,369,3.976,370,2.273,371,5.857,372,2.273,373,2.273,374,2.273,375,2.273,376,2.273,377,2.273,378,2.273,379,2.273,380,2.273,381,2.273]],["title/coverage.html",[382,2.88]],["body/coverage.html",[0,0.152,1,1.357,5,0.277,6,2.029,23,0.039,25,0.37,43,0.016,44,0.023,45,0.016,52,1.357,60,1.214,66,1.528,72,1.742,76,1.528,80,1.955,81,1.528,82,2.029,88,1.357,95,1.357,100,1.214,115,1.357,120,1.528,128,1.846,130,2.029,142,1.214,152,1.528,161,1.357,162,1.528,164,2.511,178,1.528,187,1.357,188,2.029,197,2.029,202,1.528,220,2.029,230,2.029,258,1.742,260,2.029,282,2.029,292,2.029,296,1.742,297,2.029,318,4.884,328,1.742,329,2.029,359,2.029,382,1.742,383,2.465,384,2.465,385,2.465,386,4.165,387,4.558,388,4.832,389,2.465,390,3.429,391,4.832,392,2.029,393,5.188,394,2.465,395,2.465,396,2.029,397,3.552,398,2.029,399,2.029,400,2.029,401,2.029,402,2.465,403,2.465]],["title/dependencies.html",[49,1.982,404,2.512]],["body/dependencies.html",[0,0.123,23,0.039,34,0.72,43,0.022,44,0.028,45,0.022,49,1.841,69,2.074,104,1.482,118,2.365,141,2.074,177,2.365,253,2.074,272,3.609,273,2.074,305,2.754,310,2.754,405,4.89,406,3.345,407,4.384,408,3.345,409,4.384,410,3.345,411,3.345,412,3.345,413,3.345,414,4.384,415,3.345,416,3.345,417,3.345,418,2.754,419,3.345,420,3.345,421,3.345,422,3.345,423,3.345,424,3.345,425,3.345,426,3.345,427,3.345,428,3.345,429,3.345]],["title/miscellaneous/enumerations.html",[430,1.238,431,2.965]],["body/miscellaneous/enumerations.html",[9,0.5,23,0.034,27,3.243,43,0.029,44,0.034,45,0.029,167,2.755,430,2.19,431,3.659,432,4.445,433,4.445,434,4.445]],["title/miscellaneous/functions.html",[430,1.238,435,2.965]],["body/miscellaneous/functions.html",[9,0.464,22,1.346,23,0.035,24,0.886,26,1.346,43,0.027,44,0.032,45,0.027,52,2.963,182,3.534,396,3.391,398,4.116,399,3.391,430,2.029,435,3.391,436,4.119,437,4.119,438,4.119,439,4.999,440,4.119]],["title/index.html",[9,0.283,441,2.512,442,2.512]],["body/index.html",[4,0.328,23,0.038,43,0.019,44,0.026,45,0.019,196,1.809,382,2.062,443,2.917,444,2.917,445,4,446,2.917,447,2.917,448,2.917,449,2.917,450,2.917,451,2.917,452,2.917,453,2.917,454,2.917,455,4.564,456,2.917,457,2.917,458,2.917,459,2.917,460,5.442,461,2.917,462,2.917,463,2.917,464,5.314,465,2.917,466,2.917,467,4,468,2.917,469,2.917,470,2.917,471,2.917,472,4,473,4,474,2.917,475,2.917,476,2.917,477,4,478,4,479,2.917,480,2.917,481,2.917,482,2.917,483,2.917,484,2.402,485,2.917,486,2.917,487,2.917,488,2.917,489,2.917,490,2.917,491,2.917,492,2.917,493,2.917,494,2.917,495,2.917,496,2.917,497,2.917,498,2.917,499,2.917,500,2.917,501,2.917,502,2.917]],["title/modules.html",[48,2.008]],["body/modules.html",[23,0.033,43,0.028,44,0.033,45,0.028,47,2.658,48,2.113,58,2.361,59,2.361,484,4.217,503,5.122,504,5.122,505,5.477,506,4.288,507,4.288]],["title/overview.html",[508,3.355]],["body/overview.html",[2,1.113,23,0.037,43,0.022,44,0.029,45,0.022,46,1.51,47,3.557,48,1.679,49,1.876,50,2.409,51,2.409,52,1.876,53,2.112,54,2.112,55,2.805,56,2.805,57,2.805,58,3.115,59,2.716,60,2.431,61,3.137,62,2.409,63,2.409,65,1.876,100,2.431,113,2.805,114,2.805,115,2.716,129,2.112,161,1.876,234,2.805,508,2.805,509,4.437,510,3.408,511,3.408]],["title/miscellaneous/variables.html",[430,1.238,512,2.965]],["body/miscellaneous/variables.html",[9,0.283,19,1.178,23,0.04,25,0.76,43,0.016,44,0.023,45,0.016,72,2.548,76,2.235,85,1.385,111,1.385,120,2.235,134,1.778,140,1.778,142,1.239,147,1.559,150,1.559,186,1.385,225,4.01,226,3.443,258,2.548,273,1.559,313,2.071,333,2.071,390,2.071,392,2.968,400,2.071,401,2.071,418,3.468,430,1.239,512,2.071,513,4.213,514,2.515,515,2.515,516,2.515,517,2.515,518,2.515,519,2.515,520,2.515,521,2.515,522,2.515,523,3.605,524,2.515,525,2.515,526,2.515,527,2.515,528,2.515,529,2.515,530,2.515,531,2.515,532,2.515,533,2.515,534,2.515,535,2.515,536,2.515,537,2.515,538,2.515,539,2.515,540,2.515,541,2.515,542,3.605,543,3.605,544,3.605,545,2.515,546,2.515,547,2.515,548,2.515,549,2.515,550,2.515,551,2.515,552,2.515,553,2.515,554,2.515,555,3.605,556,2.515]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"classes/ApiException.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/BaseResponse.html":{},"classes/CatVO.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatReq.html":{},"modules/DatabaseModule.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReq.html":{},"classes/LoginUserInfoVO.html":{},"classes/ParamsValidationPipe.html":{},"classes/ResponseErrorExceptionFilter.html":{},"classes/ResponseSuccessTransformInterceptor.html":{},"classes/Users.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":318,"title":{},"body":{"classes/ParamsValidationPipe.html":{},"coverage.html":{}}}],["0.1.13",{"_index":423,"title":{},"body":{"dependencies.html":{}}}],["0.11.0",{"_index":412,"title":{},"body":{"dependencies.html":{}}}],["0.2.22",{"_index":429,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":411,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":420,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":393,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":389,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":386,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":387,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":388,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":395,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":394,"title":{},"body":{"coverage.html":{}}}],["01.db.sit.ihomefnt.org",{"_index":538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":511,"title":{},"body":{"overview.html":{}}}],["12",{"_index":284,"title":{},"body":{"classes/LoginReq.html":{}}}],["1agy4bcuoecdz4yi6h8dxhdwgj84eqstmnyab8npchq",{"_index":541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1h",{"_index":127,"title":{},"body":{"modules/AuthModule.html":{}}}],["2",{"_index":234,"title":{},"body":{"classes/CreateCatReq.html":{},"overview.html":{}}}],["2.5.0",{"_index":415,"title":{},"body":{"dependencies.html":{}}}],["2b$10$inzttbwnkub4vqdpsuomq.z5tgjld/em.fattxnnkyvmzkmoqra82",{"_index":289,"title":{},"body":{"classes/LoginReq.html":{}}}],["2到8",{"_index":254,"title":{},"body":{"classes/CreateCatReq.html":{}}}],["2到8字符'})@isstring({message",{"_index":244,"title":{},"body":{"classes/CreateCatReq.html":{}}}],["3",{"_index":509,"title":{},"body":{"overview.html":{}}}],["3.0.0",{"_index":425,"title":{},"body":{"dependencies.html":{}}}],["3.21.2",{"_index":417,"title":{},"body":{"dependencies.html":{}}}],["3.4.1",{"_index":419,"title":{},"body":{"dependencies.html":{}}}],["3717",{"_index":540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":287,"title":{},"body":{"classes/LoginReq.html":{}}}],["4.0.0",{"_index":421,"title":{},"body":{"dependencies.html":{}}}],["4.1.2",{"_index":428,"title":{},"body":{"dependencies.html":{}}}],["4.1.7",{"_index":410,"title":{},"body":{"dependencies.html":{}}}],["4到12",{"_index":291,"title":{},"body":{"classes/LoginReq.html":{}}}],["4到12个字符'})@isstring({message",{"_index":285,"title":{},"body":{"classes/LoginReq.html":{}}}],["6.1.1",{"_index":407,"title":{},"body":{"dependencies.html":{}}}],["6.5.3",{"_index":426,"title":{},"body":{"dependencies.html":{}}}],["6.7.2",{"_index":405,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":243,"title":{},"body":{"classes/CreateCatReq.html":{},"classes/ResponseErrorExceptionFilter.html":{}}}],["9",{"_index":510,"title":{},"body":{"overview.html":{}}}],["_id",{"_index":360,"title":{},"body":{"classes/Users.html":{}}}],["admin",{"_index":534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["age",{"_index":189,"title":{},"body":{"classes/CatVO.html":{},"classes/CreateCatReq.html":{}}}],["aijia",{"_index":528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aijia1234567",{"_index":531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["amazing",{"_index":485,"title":{},"body":{"index.html":{}}}],["angular",{"_index":454,"title":{},"body":{"index.html":{}}}],["any).errorcode",{"_index":344,"title":{},"body":{"classes/ResponseErrorExceptionFilter.html":{}}}],["any).errormessage",{"_index":345,"title":{},"body":{"classes/ResponseErrorExceptionFilter.html":{}}}],["apibearerauth",{"_index":210,"title":{},"body":{"controllers/CatsController.html":{}}}],["apicode",{"_index":27,"title":{},"body":{"classes/ApiException.html":{},"interfaces/BaseResponse.html":{},"classes/ResponseSuccessTransformInterceptor.html":{},"miscellaneous/enumerations.html":{}}}],["apicode.fail",{"_index":41,"title":{},"body":{"classes/ApiException.html":{}}}],["apicode.success",{"_index":185,"title":{},"body":{"interfaces/BaseResponse.html":{},"classes/ResponseSuccessTransformInterceptor.html":{}}}],["apiexception",{"_index":1,"title":{"classes/ApiException.html":{}},"body":{"classes/ApiException.html":{},"injectables/AuthService.html":{},"classes/ParamsValidationPipe.html":{},"coverage.html":{}}}],["apiexception(constraints[key",{"_index":324,"title":{},"body":{"classes/ParamsValidationPipe.html":{}}}],["apioperation",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CatsController.html":{}}}],["apioperation({summary",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CatsController.html":{}}}],["apiproperty",{"_index":195,"title":{},"body":{"classes/CatVO.html":{},"classes/CreateCatReq.html":{},"classes/LoginReq.html":{},"classes/LoginUserInfoVO.html":{}}}],["apiproperty({description",{"_index":191,"title":{},"body":{"classes/CatVO.html":{},"classes/LoginUserInfoVO.html":{}}}],["apiproperty({required",{"_index":232,"title":{},"body":{"classes/CreateCatReq.html":{},"classes/LoginReq.html":{}}}],["apitags",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CatsController.html":{}}}],["apitags('authcontroller",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('catscontroller",{"_index":214,"title":{},"body":{"controllers/CatsController.html":{}}}],["apitoken",{"_index":361,"title":{},"body":{"classes/Users.html":{}}}],["app",{"_index":462,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":354,"title":{},"body":{"classes/ResponseErrorExceptionFilter.html":{}}}],["applications",{"_index":451,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":47,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["argumentmetadata",{"_index":306,"title":{},"body":{"classes/ParamsValidationPipe.html":{}}}],["argumentshost",{"_index":334,"title":{},"body":{"classes/ResponseErrorExceptionFilter.html":{}}}],["array",{"_index":326,"title":{},"body":{"classes/ParamsValidationPipe.html":{},"classes/Users.html":{}}}],["async",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/ParamsValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{}}}],["authcontroller",{"_index":81,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":211,"title":{},"body":{"controllers/CatsController.html":{}}}],["authmodule",{"_index":58,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":495,"title":{},"body":{"index.html":{}}}],["authservice",{"_index":100,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":507,"title":{},"body":{"modules.html":{}}}],["await",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/ParamsValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["backers",{"_index":486,"title":{},"body":{"index.html":{}}}],["baseresponse",{"_index":162,"title":{"interfaces/BaseResponse.html":{}},"body":{"interfaces/BaseResponse.html":{},"classes/ResponseSuccessTransformInterceptor.html":{},"coverage.html":{}}}],["baseurl",{"_index":516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["baseurl应用请求的url地址,比如https://package.ihomefnt.com",{"_index":519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["body",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CatsController.html":{}}}],["boolean",{"_index":170,"title":{},"body":{"interfaces/BaseResponse.html":{},"classes/ParamsValidationPipe.html":{},"classes/ResponseSuccessTransformInterceptor.html":{}}}],["bootstrap",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["breed",{"_index":190,"title":{},"body":{"classes/CatVO.html":{},"classes/CreateCatReq.html":{}}}],["browse",{"_index":505,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":503,"title":{},"body":{"modules.html":{}}}],["building",{"_index":446,"title":{},"body":{"index.html":{}}}],["callhandler",{"_index":173,"title":{},"body":{"interfaces/BaseResponse.html":{},"classes/ResponseSuccessTransformInterceptor.html":{}}}],["career",{"_index":362,"title":{},"body":{"classes/Users.html":{}}}],["cat",{"_index":223,"title":{},"body":{"injectables/CatsService.html":{}}}],["catch",{"_index":331,"title":{},"body":{"classes/ResponseErrorExceptionFilter.html":{}}}],["catch(exception",{"_index":332,"title":{},"body":{"classes/ResponseErrorExceptionFilter.html":{}}}],["catch(httpexception",{"_index":337,"title":{},"body":{"classes/ResponseErrorExceptionFilter.html":{}}}],["cats",{"_index":198,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["catscontroller",{"_index":66,"title":{"controllers/CatsController.html":{}},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"coverage.html":{}}}],["catsservice",{"_index":60,"title":{"injectables/CatsService.html":{}},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"coverage.html":{},"overview.html":{}}}],["catvo",{"_index":187,"title":{"classes/CatVO.html":{}},"body":{"classes/CatVO.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"coverage.html":{}}}],["charset=utf",{"_index":355,"title":{},"body":{"classes/ResponseErrorExceptionFilter.html":{}}}],["class",{"_index":0,"title":{"classes/ApiException.html":{},"classes/CatVO.html":{},"classes/CreateCatReq.html":{},"classes/LoginReq.html":{},"classes/LoginUserInfoVO.html":{},"classes/ParamsValidationPipe.html":{},"classes/ResponseErrorExceptionFilter.html":{},"classes/ResponseSuccessTransformInterceptor.html":{},"classes/Users.html":{}},"body":{"classes/ApiException.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/BaseResponse.html":{},"classes/CatVO.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatReq.html":{},"modules/DatabaseModule.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReq.html":{},"classes/LoginUserInfoVO.html":{},"classes/ParamsValidationPipe.html":{},"classes/ResponseErrorExceptionFilter.html":{},"classes/ResponseSuccessTransformInterceptor.html":{},"classes/Users.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/ApiException.html":{},"classes/CatVO.html":{},"classes/CreateCatReq.html":{},"classes/LoginReq.html":{},"classes/LoginUserInfoVO.html":{},"classes/ParamsValidationPipe.html":{},"classes/ResponseErrorExceptionFilter.html":{},"classes/ResponseSuccessTransformInterceptor.html":{},"classes/Users.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":113,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":114,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["code",{"_index":165,"title":{},"body":{"interfaces/BaseResponse.html":{},"classes/ResponseErrorExceptionFilter.html":{},"classes/ResponseSuccessTransformInterceptor.html":{}}}],["column",{"_index":371,"title":{},"body":{"classes/Users.html":{}}}],["common",{"_index":392,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["common.dbhost",{"_index":546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["common.dbname",{"_index":552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["common.dbport",{"_index":548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["common.dbpwd",{"_index":550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["common.dbuser",{"_index":549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["commonconnection",{"_index":543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["company",{"_index":363,"title":{},"body":{"classes/Users.html":{}}}],["config/app.config",{"_index":274,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["connection",{"_index":555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connection.getmongorepository(users",{"_index":556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log('==========exception:',exception",{"_index":346,"title":{},"body":{"classes/ResponseErrorExceptionFilter.html":{}}}],["const",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/ParamsValidationPipe.html":{},"classes/ResponseErrorExceptionFilter.html":{}}}],["constraints",{"_index":321,"title":{},"body":{"classes/ParamsValidationPipe.html":{}}}],["constructor",{"_index":17,"title":{},"body":{"classes/ApiException.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["constructor(errormessage",{"_index":18,"title":{},"body":{"classes/ApiException.html":{}}}],["constructor(jwtservice",{"_index":132,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(private",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CatsController.html":{}}}],["constructor(userrepository",{"_index":262,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["context",{"_index":181,"title":{},"body":{"interfaces/BaseResponse.html":{},"classes/ResponseSuccessTransformInterceptor.html":{}}}],["controller",{"_index":80,"title":{"controllers/AuthController.html":{},"controllers/CatsController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/CatsController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('cats",{"_index":216,"title":{},"body":{"controllers/CatsController.html":{}}}],["controller/auth.controller",{"_index":119,"title":{},"body":{"modules/AuthModule.html":{}}}],["controller/cats.controller",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["controllers",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CatsController.html":{},"overview.html":{}}}],["coverage",{"_index":382,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":199,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["create(@body",{"_index":217,"title":{},"body":{"controllers/CatsController.html":{}}}],["create(cat",{"_index":221,"title":{},"body":{"injectables/CatsService.html":{}}}],["create(createcatdto",{"_index":201,"title":{},"body":{"controllers/CatsController.html":{}}}],["createcatdto",{"_index":205,"title":{},"body":{"controllers/CatsController.html":{}}}],["createcatreq",{"_index":202,"title":{"classes/CreateCatReq.html":{}},"body":{"controllers/CatsController.html":{},"classes/CreateCatReq.html":{},"coverage.html":{}}}],["createconnection",{"_index":545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx",{"_index":338,"title":{},"body":{"classes/ResponseErrorExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":341,"title":{},"body":{"classes/ResponseErrorExceptionFilter.html":{}}}],["data",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/BaseResponse.html":{},"classes/ResponseErrorExceptionFilter.html":{},"classes/ResponseSuccessTransformInterceptor.html":{}}}],["database",{"_index":551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["databasemodule",{"_index":59,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules.html":{},"overview.html":{}}}],["databaseprovider",{"_index":258,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dbhost",{"_index":535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbname",{"_index":532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbport",{"_index":539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbpwd",{"_index":529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbuser",{"_index":526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["declarations",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"overview.html":{}}}],["decorators",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"classes/CatVO.html":{},"controllers/CatsController.html":{},"classes/CreateCatReq.html":{},"classes/LoginReq.html":{},"classes/LoginUserInfoVO.html":{},"classes/Users.html":{}}}],["default",{"_index":225,"title":{},"body":{"injectables/CatsService.html":{},"miscellaneous/variables.html":{}}}],["defaultsgy",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["defined",{"_index":20,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CatVO.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatReq.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReq.html":{},"classes/LoginUserInfoVO.html":{},"classes/ParamsValidationPipe.html":{},"classes/ResponseErrorExceptionFilter.html":{},"classes/ResponseSuccessTransformInterceptor.html":{},"classes/Users.html":{}}}],["dependencies",{"_index":49,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":196,"title":{},"body":{"classes/CatVO.html":{},"classes/CreateCatReq.html":{},"classes/LoginReq.html":{},"index.html":{}}}],["development",{"_index":463,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":383,"title":{},"body":{"coverage.html":{}}}],["done",{"_index":265,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["dto/request/cat.req",{"_index":212,"title":{},"body":{"controllers/CatsController.html":{}}}],["dto/request/user.req",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/response/user.vo",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["e2e",{"_index":474,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":447,"title":{},"body":{"index.html":{}}}],["email",{"_index":364,"title":{},"body":{"classes/Users.html":{}}}],["entities",{"_index":553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entity",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/Users.html":{}}}],["entity._id",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{}}}],["entity/user.entity",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["enum",{"_index":239,"title":{},"body":{"classes/CreateCatReq.html":{}}}],["enum/api.code.enum",{"_index":35,"title":{},"body":{"classes/ApiException.html":{},"interfaces/BaseResponse.html":{},"classes/ResponseSuccessTransformInterceptor.html":{}}}],["enumerations",{"_index":431,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":319,"title":{},"body":{"classes/ParamsValidationPipe.html":{}}}],["error.constraints",{"_index":322,"title":{},"body":{"classes/ParamsValidationPipe.html":{}}}],["errorcode",{"_index":12,"title":{},"body":{"classes/ApiException.html":{},"classes/ResponseErrorExceptionFilter.html":{}}}],["errormessage",{"_index":13,"title":{},"body":{"classes/ApiException.html":{},"classes/ResponseErrorExceptionFilter.html":{}}}],["errorresponse",{"_index":351,"title":{},"body":{"classes/ResponseErrorExceptionFilter.html":{}}}],["errors",{"_index":315,"title":{},"body":{"classes/ParamsValidationPipe.html":{}}}],["errors.length",{"_index":317,"title":{},"body":{"classes/ParamsValidationPipe.html":{}}}],["errors.shift",{"_index":320,"title":{},"body":{"classes/ParamsValidationPipe.html":{}}}],["example",{"_index":233,"title":{},"body":{"classes/CreateCatReq.html":{},"classes/LoginReq.html":{}}}],["exception",{"_index":336,"title":{},"body":{"classes/ResponseErrorExceptionFilter.html":{}}}],["exception.getstatus",{"_index":349,"title":{},"body":{"classes/ResponseErrorExceptionFilter.html":{}}}],["exception.message.error",{"_index":343,"title":{},"body":{"classes/ResponseErrorExceptionFilter.html":{}}}],["exception.message.message",{"_index":342,"title":{},"body":{"classes/ResponseErrorExceptionFilter.html":{}}}],["exception/api.exception",{"_index":308,"title":{},"body":{"classes/ParamsValidationPipe.html":{}}}],["exceptionfilter",{"_index":330,"title":{},"body":{"classes/ResponseErrorExceptionFilter.html":{}}}],["executioncontext",{"_index":172,"title":{},"body":{"interfaces/BaseResponse.html":{},"classes/ResponseSuccessTransformInterceptor.html":{}}}],["expiresin",{"_index":126,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":36,"title":{},"body":{"classes/ApiException.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/BaseResponse.html":{},"classes/CatVO.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatReq.html":{},"modules/DatabaseModule.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReq.html":{},"classes/LoginUserInfoVO.html":{},"classes/ParamsValidationPipe.html":{},"classes/ResponseErrorExceptionFilter.html":{},"classes/ResponseSuccessTransformInterceptor.html":{},"classes/Users.html":{}}}],["exports",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"overview.html":{}}}],["express",{"_index":409,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":7,"title":{},"body":{"classes/ApiException.html":{},"injectables/JwtStrategy.html":{}}}],["extractjwt",{"_index":271,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":278,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["fail",{"_index":434,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["false",{"_index":280,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/ResponseErrorExceptionFilter.html":{}}}],["fastify",{"_index":413,"title":{},"body":{"dependencies.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/ApiException.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/BaseResponse.html":{},"classes/CatVO.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatReq.html":{},"modules/DatabaseModule.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReq.html":{},"classes/LoginUserInfoVO.html":{},"classes/ParamsValidationPipe.html":{},"classes/ResponseErrorExceptionFilter.html":{},"classes/ResponseSuccessTransformInterceptor.html":{},"classes/Users.html":{},"coverage.html":{}}}],["file.sit.ihomefnt.org/unifyfile/file/uploadfile",{"_index":522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["findall",{"_index":200,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["framework",{"_index":445,"title":{},"body":{"index.html":{}}}],["function",{"_index":397,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":435,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["geterrorcode",{"_index":15,"title":{},"body":{"classes/ApiException.html":{}}}],["geterrormessage",{"_index":16,"title":{},"body":{"classes/ApiException.html":{}}}],["getting",{"_index":441,"title":{"index.html":{}},"body":{}}],["global",{"_index":257,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["graph",{"_index":506,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":481,"title":{},"body":{"index.html":{}}}],["heavily",{"_index":452,"title":{},"body":{"index.html":{}}}],["helmet",{"_index":416,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":492,"title":{},"body":{"index.html":{}}}],["host",{"_index":333,"title":{},"body":{"classes/ResponseErrorExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["host.switchtohttp",{"_index":339,"title":{},"body":{"classes/ResponseErrorExceptionFilter.html":{}}}],["httpexception",{"_index":8,"title":{},"body":{"classes/ApiException.html":{},"classes/ResponseErrorExceptionFilter.html":{}}}],["https://nestjs.com",{"_index":499,"title":{},"body":{"index.html":{}}}],["https://package.sit.ihomefnt.org",{"_index":518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://unify",{"_index":521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpstatus",{"_index":33,"title":{},"body":{"classes/ApiException.html":{},"classes/ResponseErrorExceptionFilter.html":{}}}],["httpstatus.bad_request",{"_index":38,"title":{},"body":{"classes/ApiException.html":{}}}],["httpstatus.internal_server_error",{"_index":350,"title":{},"body":{"classes/ResponseErrorExceptionFilter.html":{}}}],["id",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginUserInfoVO.html":{}}}],["id.tostring",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{}}}],["identifier",{"_index":384,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":279,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":179,"title":{},"body":{"interfaces/BaseResponse.html":{},"classes/ParamsValidationPipe.html":{},"classes/ResponseErrorExceptionFilter.html":{},"classes/ResponseSuccessTransformInterceptor.html":{}}}],["import",{"_index":32,"title":{},"body":{"classes/ApiException.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/BaseResponse.html":{},"classes/CatVO.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatReq.html":{},"modules/DatabaseModule.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReq.html":{},"classes/LoginUserInfoVO.html":{},"classes/ParamsValidationPipe.html":{},"classes/ResponseErrorExceptionFilter.html":{},"classes/ResponseSuccessTransformInterceptor.html":{},"classes/Users.html":{}}}],["imports",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/BaseResponse.html":{},"classes/CatVO.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatReq.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReq.html":{},"classes/LoginUserInfoVO.html":{},"classes/ParamsValidationPipe.html":{},"classes/ResponseErrorExceptionFilter.html":{},"classes/ResponseSuccessTransformInterceptor.html":{},"classes/Users.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/ApiException.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/BaseResponse.html":{},"classes/CatVO.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatReq.html":{},"modules/DatabaseModule.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReq.html":{},"classes/LoginUserInfoVO.html":{},"classes/ParamsValidationPipe.html":{},"classes/ResponseErrorExceptionFilter.html":{},"classes/ResponseSuccessTransformInterceptor.html":{},"classes/Users.html":{}}}],["infrastructure/config/app.config",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["infrastructure/exception/api.exception",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{}}}],["infrastructure/strategy/jwt.strategy",{"_index":121,"title":{},"body":{"modules/AuthModule.html":{}}}],["inject",{"_index":140,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["inject('userrepository",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["injectable",{"_index":128,"title":{"injectables/AuthService.html":{},"injectables/CatsService.html":{},"injectables/JwtStrategy.html":{}},"body":{"injectables/AuthService.html":{},"injectables/CatsService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["injectables",{"_index":129,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CatsService.html":{},"injectables/JwtStrategy.html":{},"overview.html":{}}}],["inspired",{"_index":453,"title":{},"body":{"index.html":{}}}],["installation",{"_index":459,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":461,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":348,"title":{},"body":{"classes/ResponseErrorExceptionFilter.html":{}}}],["intercept",{"_index":180,"title":{},"body":{"interfaces/BaseResponse.html":{},"classes/ResponseSuccessTransformInterceptor.html":{}}}],["intercept(context",{"_index":357,"title":{},"body":{"classes/ResponseSuccessTransformInterceptor.html":{}}}],["interface",{"_index":161,"title":{"interfaces/BaseResponse.html":{}},"body":{"interfaces/BaseResponse.html":{},"classes/ResponseSuccessTransformInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":163,"title":{},"body":{"interfaces/BaseResponse.html":{}}}],["isin",{"_index":252,"title":{},"body":{"classes/CreateCatReq.html":{}}}],["isin(undefined",{"_index":238,"title":{},"body":{"classes/CreateCatReq.html":{}}}],["isint",{"_index":248,"title":{},"body":{"classes/CreateCatReq.html":{}}}],["isint({message",{"_index":231,"title":{},"body":{"classes/CreateCatReq.html":{}}}],["isnotempty",{"_index":251,"title":{},"body":{"classes/CreateCatReq.html":{},"classes/LoginReq.html":{}}}],["isnotempty({message",{"_index":237,"title":{},"body":{"classes/CreateCatReq.html":{},"classes/LoginReq.html":{}}}],["isstring",{"_index":249,"title":{},"body":{"classes/CreateCatReq.html":{},"classes/LoginReq.html":{}}}],["isstring({message",{"_index":236,"title":{},"body":{"classes/CreateCatReq.html":{},"classes/LoginReq.html":{}}}],["javascript",{"_index":311,"title":{},"body":{"classes/ParamsValidationPipe.html":{}}}],["join",{"_index":488,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":273,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/LoginUserInfoVO.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["jwtfromrequest",{"_index":277,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":117,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["jwtmodule.register",{"_index":123,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":133,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":115,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":496,"title":{},"body":{"index.html":{}}}],["key",{"_index":323,"title":{},"body":{"classes/ParamsValidationPipe.html":{}}}],["legend",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"overview.html":{}}}],["length",{"_index":250,"title":{},"body":{"classes/CreateCatReq.html":{},"classes/LoginReq.html":{}}}],["length(2",{"_index":242,"title":{},"body":{"classes/CreateCatReq.html":{}}}],["length(4",{"_index":283,"title":{},"body":{"classes/LoginReq.html":{}}}],["license",{"_index":502,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":478,"title":{},"body":{"index.html":{}}}],["liuhui",{"_index":286,"title":{},"body":{"classes/LoginReq.html":{}}}],["logger",{"_index":398,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["logger(req",{"_index":438,"title":{},"body":{"miscellaneous/functions.html":{}}}],["login",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(data",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["loginreq",{"_index":88,"title":{"classes/LoginReq.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginReq.html":{},"coverage.html":{}}}],["loginuserinfovo",{"_index":95,"title":{"classes/LoginUserInfoVO.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginUserInfoVO.html":{},"coverage.html":{}}}],["map",{"_index":174,"title":{},"body":{"interfaces/BaseResponse.html":{},"classes/ResponseSuccessTransformInterceptor.html":{}}}],["map(data",{"_index":184,"title":{},"body":{"interfaces/BaseResponse.html":{},"classes/ResponseSuccessTransformInterceptor.html":{}}}],["matching",{"_index":44,"title":{},"body":{"classes/ApiException.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/BaseResponse.html":{},"classes/CatVO.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatReq.html":{},"modules/DatabaseModule.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReq.html":{},"classes/LoginUserInfoVO.html":{},"classes/ParamsValidationPipe.html":{},"classes/ResponseErrorExceptionFilter.html":{},"classes/ResponseSuccessTransformInterceptor.html":{},"classes/Users.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":246,"title":{},"body":{"classes/CreateCatReq.html":{},"classes/LoginReq.html":{}}}],["message",{"_index":166,"title":{},"body":{"interfaces/BaseResponse.html":{},"classes/CreateCatReq.html":{},"classes/LoginReq.html":{},"classes/ResponseErrorExceptionFilter.html":{},"classes/ResponseSuccessTransformInterceptor.html":{}}}],["metadata",{"_index":305,"title":{},"body":{"classes/ParamsValidationPipe.html":{},"dependencies.html":{}}}],["metatype",{"_index":303,"title":{},"body":{"classes/ParamsValidationPipe.html":{}}}],["methods",{"_index":14,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/JwtStrategy.html":{},"classes/ParamsValidationPipe.html":{},"classes/ResponseErrorExceptionFilter.html":{},"classes/ResponseSuccessTransformInterceptor.html":{}}}],["minlength",{"_index":245,"title":{},"body":{"classes/CreateCatReq.html":{},"classes/LoginReq.html":{}}}],["miscellaneous",{"_index":430,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":477,"title":{},"body":{"index.html":{}}}],["mobile",{"_index":365,"title":{},"body":{"classes/Users.html":{}}}],["mode",{"_index":467,"title":{},"body":{"index.html":{}}}],["module",{"_index":46,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"overview.html":{}}}],["module/auth.module",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["module/database.module",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["modules",{"_index":48,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules.html":{},"overview.html":{}}}],["mongo",{"_index":537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongodb",{"_index":418,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["mongorepository",{"_index":135,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["more",{"_index":491,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":497,"title":{},"body":{"index.html":{}}}],["name",{"_index":24,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CatVO.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatReq.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReq.html":{},"classes/LoginUserInfoVO.html":{},"classes/ParamsValidationPipe.html":{},"classes/ResponseErrorExceptionFilter.html":{},"classes/ResponseSuccessTransformInterceptor.html":{},"miscellaneous/functions.html":{}}}],["nest",{"_index":455,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":501,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":171,"title":{},"body":{"interfaces/BaseResponse.html":{},"classes/ResponseSuccessTransformInterceptor.html":{}}}],["nestjs/common",{"_index":34,"title":{},"body":{"classes/ApiException.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/BaseResponse.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"modules/DatabaseModule.html":{},"injectables/JwtStrategy.html":{},"classes/ParamsValidationPipe.html":{},"classes/ResponseErrorExceptionFilter.html":{},"classes/ResponseSuccessTransformInterceptor.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":406,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":118,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":408,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{},"classes/CatVO.html":{},"controllers/CatsController.html":{},"classes/CreateCatReq.html":{},"classes/LoginReq.html":{},"classes/LoginUserInfoVO.html":{},"dependencies.html":{}}}],["new",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/ParamsValidationPipe.html":{},"coverage.html":{}}}],["next",{"_index":182,"title":{},"body":{"interfaces/BaseResponse.html":{},"classes/ResponseSuccessTransformInterceptor.html":{},"miscellaneous/functions.html":{}}}],["next.handle().pipe",{"_index":183,"title":{},"body":{"interfaces/BaseResponse.html":{},"classes/ResponseSuccessTransformInterceptor.html":{}}}],["node.js",{"_index":444,"title":{},"body":{"index.html":{}}}],["npm",{"_index":460,"title":{},"body":{"index.html":{}}}],["number",{"_index":168,"title":{},"body":{"interfaces/BaseResponse.html":{},"classes/CatVO.html":{},"classes/CreateCatReq.html":{},"classes/ParamsValidationPipe.html":{},"classes/ResponseSuccessTransformInterceptor.html":{}}}],["object",{"_index":313,"title":{},"body":{"classes/ParamsValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["objectid",{"_index":368,"title":{},"body":{"classes/Users.html":{}}}],["objectidcolumn",{"_index":369,"title":{},"body":{"classes/Users.html":{}}}],["observable",{"_index":176,"title":{},"body":{"interfaces/BaseResponse.html":{},"classes/ResponseSuccessTransformInterceptor.html":{}}}],["open",{"_index":479,"title":{},"body":{"index.html":{}}}],["optional",{"_index":26,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/JwtStrategy.html":{},"classes/ParamsValidationPipe.html":{},"classes/ResponseErrorExceptionFilter.html":{},"classes/ResponseSuccessTransformInterceptor.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"overview.html":{}}}],["overview",{"_index":508,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":404,"title":{"dependencies.html":{}},"body":{}}],["parameters",{"_index":22,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/JwtStrategy.html":{},"classes/ParamsValidationPipe.html":{},"classes/ResponseErrorExceptionFilter.html":{},"classes/ResponseSuccessTransformInterceptor.html":{},"miscellaneous/functions.html":{}}}],["paramsvalidationpipe",{"_index":296,"title":{"classes/ParamsValidationPipe.html":{}},"body":{"classes/ParamsValidationPipe.html":{},"coverage.html":{}}}],["passport",{"_index":272,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["passportmodule.register",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["passportstrategy",{"_index":269,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":275,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginReq.html":{},"classes/Users.html":{},"miscellaneous/variables.html":{}}}],["payload",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["pipetransform",{"_index":298,"title":{},"body":{"classes/ParamsValidationPipe.html":{}}}],["plaintoclass",{"_index":309,"title":{},"body":{"classes/ParamsValidationPipe.html":{}}}],["plaintoclass(metatype",{"_index":314,"title":{},"body":{"classes/ParamsValidationPipe.html":{}}}],["please",{"_index":489,"title":{},"body":{"index.html":{}}}],["port",{"_index":547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["post",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CatsController.html":{}}}],["post('/create",{"_index":203,"title":{},"body":{"controllers/CatsController.html":{}}}],["post('/queryall",{"_index":207,"title":{},"body":{"controllers/CatsController.html":{}}}],["post('login",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CatsController.html":{}}}],["private",{"_index":11,"title":{},"body":{"classes/ApiException.html":{},"injectables/AuthService.html":{},"injectables/CatsService.html":{},"injectables/JwtStrategy.html":{},"classes/ParamsValidationPipe.html":{}}}],["privatekey",{"_index":124,"title":{},"body":{"modules/AuthModule.html":{}}}],["process.env.fabu_base_url",{"_index":517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.fabu_db_host",{"_index":536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.fabu_db_name",{"_index":533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.fabu_dbpwd",{"_index":530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.fabu_dbuser",{"_index":527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.fabu_secret",{"_index":524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":469,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":443,"title":{},"body":{"index.html":{}}}],["project",{"_index":480,"title":{},"body":{"index.html":{}}}],["promise",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/BaseResponse.html":{},"classes/ResponseSuccessTransformInterceptor.html":{}}}],["properties",{"_index":10,"title":{},"body":{"classes/ApiException.html":{},"interfaces/BaseResponse.html":{},"classes/CatVO.html":{},"injectables/CatsService.html":{},"classes/CreateCatReq.html":{},"classes/LoginReq.html":{},"classes/LoginUserInfoVO.html":{},"classes/Users.html":{}}}],["provide",{"_index":542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provider/database.provider",{"_index":259,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["provider/user.provider",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"overview.html":{}}}],["qq",{"_index":366,"title":{},"body":{"classes/Users.html":{}}}],["read",{"_index":490,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/JwtStrategy.html":{}}}],["reflect",{"_index":422,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":458,"title":{},"body":{"index.html":{}}}],["req",{"_index":440,"title":{},"body":{"miscellaneous/functions.html":{}}}],["required",{"_index":255,"title":{},"body":{"classes/CreateCatReq.html":{},"classes/LoginReq.html":{}}}],["res",{"_index":439,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reset",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"overview.html":{}}}],["response",{"_index":340,"title":{},"body":{"classes/ResponseErrorExceptionFilter.html":{}}}],["response.header('content",{"_index":353,"title":{},"body":{"classes/ResponseErrorExceptionFilter.html":{}}}],["response.send(errorresponse",{"_index":356,"title":{},"body":{"classes/ResponseErrorExceptionFilter.html":{}}}],["response.status(status",{"_index":352,"title":{},"body":{"classes/ResponseErrorExceptionFilter.html":{}}}],["responseerrorexceptionfilter",{"_index":328,"title":{"classes/ResponseErrorExceptionFilter.html":{}},"body":{"classes/ResponseErrorExceptionFilter.html":{},"coverage.html":{}}}],["responsesuccesstransforminterceptor",{"_index":178,"title":{"classes/ResponseSuccessTransformInterceptor.html":{}},"body":{"interfaces/BaseResponse.html":{},"classes/ResponseSuccessTransformInterceptor.html":{},"coverage.html":{}}}],["result",{"_index":43,"title":{},"body":{"classes/ApiException.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/BaseResponse.html":{},"classes/CatVO.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatReq.html":{},"modules/DatabaseModule.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReq.html":{},"classes/LoginUserInfoVO.html":{},"classes/ParamsValidationPipe.html":{},"classes/ResponseErrorExceptionFilter.html":{},"classes/ResponseSuccessTransformInterceptor.html":{},"classes/Users.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":45,"title":{},"body":{"classes/ApiException.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/BaseResponse.html":{},"classes/CatVO.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatReq.html":{},"modules/DatabaseModule.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReq.html":{},"classes/LoginUserInfoVO.html":{},"classes/ParamsValidationPipe.html":{},"classes/ResponseErrorExceptionFilter.html":{},"classes/ResponseSuccessTransformInterceptor.html":{},"classes/Users.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":42,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/BaseResponse.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/JwtStrategy.html":{},"classes/ParamsValidationPipe.html":{},"classes/ResponseSuccessTransformInterceptor.html":{}}}],["returns",{"_index":30,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/JwtStrategy.html":{},"classes/ParamsValidationPipe.html":{},"classes/ResponseErrorExceptionFilter.html":{},"classes/ResponseSuccessTransformInterceptor.html":{}}}],["rimraf",{"_index":424,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":464,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":177,"title":{},"body":{"interfaces/BaseResponse.html":{},"classes/ResponseSuccessTransformInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":175,"title":{},"body":{"interfaces/BaseResponse.html":{},"classes/ResponseSuccessTransformInterceptor.html":{}}}],["scalable",{"_index":448,"title":{},"body":{"index.html":{}}}],["secret",{"_index":523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secretkey",{"_index":120,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":281,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secretsecret",{"_index":525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server",{"_index":449,"title":{},"body":{"index.html":{}}}],["service/auth.service",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["service/cats.service",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{}}}],["side",{"_index":450,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":125,"title":{},"body":{"modules/AuthModule.html":{}}}],["signtoken",{"_index":131,"title":{},"body":{"injectables/AuthService.html":{}}}],["signtoken(data",{"_index":138,"title":{},"body":{"injectables/AuthService.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/ApiException.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/BaseResponse.html":{},"classes/CatVO.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatReq.html":{},"modules/DatabaseModule.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReq.html":{},"classes/LoginUserInfoVO.html":{},"classes/ParamsValidationPipe.html":{},"classes/ResponseErrorExceptionFilter.html":{},"classes/ResponseSuccessTransformInterceptor.html":{},"classes/Users.html":{},"index.html":{}}}],["sponsors",{"_index":483,"title":{},"body":{"index.html":{}}}],["src/.../api.code.enum.ts",{"_index":432,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../app.config.ts",{"_index":513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../database.provider.ts",{"_index":514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../logger.middleware.ts",{"_index":437,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../main.ts",{"_index":436,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../user.provider.ts",{"_index":515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["src/controller/auth.controller.ts",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/controller/auth.controller.ts:14",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/controller/cats.controller.ts",{"_index":197,"title":{},"body":{"controllers/CatsController.html":{},"coverage.html":{}}}],["src/controller/cats.controller.ts:17",{"_index":204,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/controller/cats.controller.ts:23",{"_index":208,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/dto/request/cat.req.ts",{"_index":230,"title":{},"body":{"classes/CreateCatReq.html":{},"coverage.html":{}}}],["src/dto/request/cat.req.ts:16",{"_index":247,"title":{},"body":{"classes/CreateCatReq.html":{}}}],["src/dto/request/cat.req.ts:25",{"_index":235,"title":{},"body":{"classes/CreateCatReq.html":{}}}],["src/dto/request/cat.req.ts:36",{"_index":241,"title":{},"body":{"classes/CreateCatReq.html":{}}}],["src/dto/request/user.req.ts",{"_index":282,"title":{},"body":{"classes/LoginReq.html":{},"coverage.html":{}}}],["src/dto/request/user.req.ts:16",{"_index":288,"title":{},"body":{"classes/LoginReq.html":{}}}],["src/dto/request/user.req.ts:25",{"_index":290,"title":{},"body":{"classes/LoginReq.html":{}}}],["src/dto/response/cat.vo",{"_index":213,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["src/dto/response/cat.vo.ts",{"_index":188,"title":{},"body":{"classes/CatVO.html":{},"coverage.html":{}}}],["src/dto/response/cat.vo.ts:11",{"_index":193,"title":{},"body":{"classes/CatVO.html":{}}}],["src/dto/response/cat.vo.ts:5",{"_index":194,"title":{},"body":{"classes/CatVO.html":{}}}],["src/dto/response/cat.vo.ts:8",{"_index":192,"title":{},"body":{"classes/CatVO.html":{}}}],["src/dto/response/user.vo.ts",{"_index":292,"title":{},"body":{"classes/LoginUserInfoVO.html":{},"coverage.html":{}}}],["src/dto/response/user.vo.ts:11",{"_index":294,"title":{},"body":{"classes/LoginUserInfoVO.html":{}}}],["src/dto/response/user.vo.ts:5",{"_index":295,"title":{},"body":{"classes/LoginUserInfoVO.html":{}}}],["src/dto/response/user.vo.ts:8",{"_index":293,"title":{},"body":{"classes/LoginUserInfoVO.html":{}}}],["src/entity/user.entity.ts",{"_index":359,"title":{},"body":{"classes/Users.html":{},"coverage.html":{}}}],["src/entity/user.entity.ts:12",{"_index":377,"title":{},"body":{"classes/Users.html":{}}}],["src/entity/user.entity.ts:15",{"_index":375,"title":{},"body":{"classes/Users.html":{}}}],["src/entity/user.entity.ts:18",{"_index":380,"title":{},"body":{"classes/Users.html":{}}}],["src/entity/user.entity.ts:21",{"_index":372,"title":{},"body":{"classes/Users.html":{}}}],["src/entity/user.entity.ts:24",{"_index":379,"title":{},"body":{"classes/Users.html":{}}}],["src/entity/user.entity.ts:35",{"_index":376,"title":{},"body":{"classes/Users.html":{}}}],["src/entity/user.entity.ts:38",{"_index":378,"title":{},"body":{"classes/Users.html":{}}}],["src/entity/user.entity.ts:41",{"_index":374,"title":{},"body":{"classes/Users.html":{}}}],["src/entity/user.entity.ts:44",{"_index":373,"title":{},"body":{"classes/Users.html":{}}}],["src/entity/user.entity.ts:6",{"_index":370,"title":{},"body":{"classes/Users.html":{}}}],["src/entity/user.entity.ts:9",{"_index":381,"title":{},"body":{"classes/Users.html":{}}}],["src/infrastructure/config/app.config.ts",{"_index":390,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/infrastructure/enum/api.code.enum.ts",{"_index":433,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/infrastructure/exception/api.exception.ts",{"_index":6,"title":{},"body":{"classes/ApiException.html":{},"coverage.html":{}}}],["src/infrastructure/exception/api.exception.ts:14",{"_index":29,"title":{},"body":{"classes/ApiException.html":{}}}],["src/infrastructure/exception/api.exception.ts:18",{"_index":31,"title":{},"body":{"classes/ApiException.html":{}}}],["src/infrastructure/exception/api.exception.ts:5",{"_index":28,"title":{},"body":{"classes/ApiException.html":{}}}],["src/infrastructure/exception/api.exception.ts:6",{"_index":21,"title":{},"body":{"classes/ApiException.html":{}}}],["src/infrastructure/filter/response.error.exception.filter.ts",{"_index":329,"title":{},"body":{"classes/ResponseErrorExceptionFilter.html":{},"coverage.html":{}}}],["src/infrastructure/filter/response.error.exception.filter.ts:11",{"_index":335,"title":{},"body":{"classes/ResponseErrorExceptionFilter.html":{}}}],["src/infrastructure/interceptor/response.success.transform.interceptor.ts",{"_index":164,"title":{},"body":{"interfaces/BaseResponse.html":{},"classes/ResponseSuccessTransformInterceptor.html":{},"coverage.html":{}}}],["src/infrastructure/interceptor/response.success.transform.interceptor.ts:15",{"_index":358,"title":{},"body":{"classes/ResponseSuccessTransformInterceptor.html":{}}}],["src/infrastructure/middleware/logger.middleware.ts",{"_index":396,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/infrastructure/pipe/params.validation.pipe.ts",{"_index":297,"title":{},"body":{"classes/ParamsValidationPipe.html":{},"coverage.html":{}}}],["src/infrastructure/pipe/params.validation.pipe.ts:32",{"_index":302,"title":{},"body":{"classes/ParamsValidationPipe.html":{}}}],["src/infrastructure/pipe/params.validation.pipe.ts:7",{"_index":307,"title":{},"body":{"classes/ParamsValidationPipe.html":{}}}],["src/infrastructure/strategy/jwt.strategy.ts",{"_index":260,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/infrastructure/strategy/jwt.strategy.ts:21",{"_index":267,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/infrastructure/strategy/jwt.strategy.ts:9",{"_index":263,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/main.ts",{"_index":399,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/module/auth.module.ts",{"_index":116,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/module/database.module.ts",{"_index":256,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/provider/database.provider.ts",{"_index":400,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/provider/user.provider",{"_index":122,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/provider/user.provider.ts",{"_index":401,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/service/auth.service.ts",{"_index":130,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/service/auth.service.ts:10",{"_index":136,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/service/auth.service.ts:18",{"_index":137,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/service/auth.service.ts:42",{"_index":139,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/service/cats.service.ts",{"_index":220,"title":{},"body":{"injectables/CatsService.html":{},"coverage.html":{}}}],["src/service/cats.service.ts:12",{"_index":224,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/service/cats.service.ts:6",{"_index":227,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/service/cats.service.ts:8",{"_index":222,"title":{},"body":{"injectables/CatsService.html":{}}}],["start",{"_index":465,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":468,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":470,"title":{},"body":{"index.html":{}}}],["started",{"_index":442,"title":{"index.html":{}},"body":{}}],["starter",{"_index":457,"title":{},"body":{"index.html":{}}}],["statements",{"_index":385,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":347,"title":{},"body":{"classes/ResponseErrorExceptionFilter.html":{}}}],["stay",{"_index":493,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":270,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":19,"title":{},"body":{"classes/ApiException.html":{},"interfaces/BaseResponse.html":{},"classes/CatVO.html":{},"classes/CreateCatReq.html":{},"classes/LoginReq.html":{},"classes/LoginUserInfoVO.html":{},"classes/ParamsValidationPipe.html":{},"classes/ResponseSuccessTransformInterceptor.html":{},"classes/Users.html":{},"miscellaneous/variables.html":{}}}],["success",{"_index":167,"title":{},"body":{"interfaces/BaseResponse.html":{},"classes/ResponseErrorExceptionFilter.html":{},"classes/ResponseSuccessTransformInterceptor.html":{},"miscellaneous/enumerations.html":{}}}],["summary",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CatsController.html":{}}}],["super",{"_index":276,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["super(errormessage",{"_index":37,"title":{},"body":{"classes/ApiException.html":{}}}],["support",{"_index":484,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":504,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":414,"title":{},"body":{"dependencies.html":{}}}],["t",{"_index":169,"title":{},"body":{"interfaces/BaseResponse.html":{},"classes/ResponseSuccessTransformInterceptor.html":{}}}],["table",{"_index":403,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":402,"title":{},"body":{"coverage.html":{}}}],["teams",{"_index":367,"title":{},"body":{"classes/Users.html":{}}}],["test",{"_index":473,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":476,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":475,"title":{},"body":{"index.html":{}}}],["tests",{"_index":472,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":482,"title":{},"body":{"index.html":{}}}],["this.authservice.login(data",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.cats",{"_index":229,"title":{},"body":{"injectables/CatsService.html":{}}}],["this.cats.push(cat",{"_index":228,"title":{},"body":{"injectables/CatsService.html":{}}}],["this.catsservice.create(createcatdto",{"_index":218,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.catsservice.findall",{"_index":219,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.errorcode",{"_index":40,"title":{},"body":{"classes/ApiException.html":{}}}],["this.errormessage",{"_index":39,"title":{},"body":{"classes/ApiException.html":{}}}],["this.jwtservice.sign(data",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.signtoken(payload",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tovalidate(metatype",{"_index":312,"title":{},"body":{"classes/ParamsValidationPipe.html":{}}}],["this.userrepository.findone",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["throw",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/ParamsValidationPipe.html":{}}}],["token",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginUserInfoVO.html":{},"classes/Users.html":{}}}],["touch",{"_index":494,"title":{},"body":{"index.html":{}}}],["tovalidate",{"_index":299,"title":{},"body":{"classes/ParamsValidationPipe.html":{}}}],["tovalidate(metatype",{"_index":301,"title":{},"body":{"classes/ParamsValidationPipe.html":{}}}],["transform",{"_index":300,"title":{},"body":{"classes/ParamsValidationPipe.html":{}}}],["transform(value",{"_index":304,"title":{},"body":{"classes/ParamsValidationPipe.html":{}}}],["transformer",{"_index":310,"title":{},"body":{"classes/ParamsValidationPipe.html":{},"dependencies.html":{}}}],["true",{"_index":186,"title":{},"body":{"interfaces/BaseResponse.html":{},"classes/CreateCatReq.html":{},"classes/LoginReq.html":{},"classes/ResponseSuccessTransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":500,"title":{},"body":{"index.html":{}}}],["type",{"_index":25,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/BaseResponse.html":{},"classes/CatVO.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatReq.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReq.html":{},"classes/LoginUserInfoVO.html":{},"classes/ParamsValidationPipe.html":{},"classes/ResponseErrorExceptionFilter.html":{},"classes/ResponseSuccessTransformInterceptor.html":{},"classes/Users.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":141,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/Users.html":{},"dependencies.html":{}}}],["types",{"_index":325,"title":{},"body":{"classes/ParamsValidationPipe.html":{}}}],["types.find(type",{"_index":327,"title":{},"body":{"classes/ParamsValidationPipe.html":{}}}],["typescript",{"_index":456,"title":{},"body":{"index.html":{}}}],["ui",{"_index":427,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":268,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["undefined",{"_index":240,"title":{},"body":{"classes/CreateCatReq.html":{}}}],["unit",{"_index":471,"title":{},"body":{"index.html":{}}}],["uploadurl",{"_index":520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usefactory",{"_index":544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useguards",{"_index":209,"title":{},"body":{"controllers/CatsController.html":{}}}],["useguards(authguard",{"_index":215,"title":{},"body":{"controllers/CatsController.html":{}}}],["userid",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginUserInfoVO.html":{}}}],["username",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/Users.html":{},"miscellaneous/variables.html":{}}}],["userprovider",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userrepository",{"_index":134,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["users",{"_index":142,"title":{"classes/Users.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/Users.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["useunifiedtopology",{"_index":554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validate",{"_index":261,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/ParamsValidationPipe.html":{}}}],["validate(object",{"_index":316,"title":{},"body":{"classes/ParamsValidationPipe.html":{}}}],["validate(payload",{"_index":264,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validator",{"_index":253,"title":{},"body":{"classes/CreateCatReq.html":{},"classes/LoginReq.html":{},"classes/ParamsValidationPipe.html":{},"dependencies.html":{}}}],["value",{"_index":226,"title":{},"body":{"injectables/CatsService.html":{},"classes/ParamsValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":391,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":512,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verifiedcallback",{"_index":266,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["void",{"_index":206,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/ResponseErrorExceptionFilter.html":{}}}],["watch",{"_index":466,"title":{},"body":{"index.html":{}}}],["website",{"_index":498,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":487,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/ApiException.html":{"url":"classes/ApiException.html","title":"class - ApiException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/exception/api.exception.ts\n        \n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errorCode\n                            \n                            \n                                    Private\n                                errorMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getErrorCode\n                            \n                            \n                                getErrorMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(errorMessage: string)\n                    \n                \n                        \n                            \n                                Defined in src/infrastructure/exception/api.exception.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errorMessage\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ApiCode\n\n                        \n                    \n                        \n                            \n                                    Defined in src/infrastructure/exception/api.exception.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/infrastructure/exception/api.exception.ts:5\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getErrorCode\n                        \n                        \n                    \n                \n            \n            \n                \ngetErrorCode()\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/exception/api.exception.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ApiCode\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getErrorMessage\n                        \n                        \n                    \n                \n            \n            \n                \ngetErrorMessage()\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/exception/api.exception.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\nimport { ApiCode } from '../enum/api.code.enum';\n\nexport class ApiException extends HttpException {\n  private errorMessage: string;\n  private errorCode: ApiCode;\n\n  constructor(errorMessage: string) {\n    super(errorMessage, HttpStatus.BAD_REQUEST);\n    this.errorMessage = errorMessage;\n    this.errorCode = ApiCode.FAIL;\n  }\n\n  getErrorCode(): ApiCode {\n    return this.errorCode;\n  }\n\n  getErrorMessage(): string {\n    return this.errorMessage;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nCatsService\n\nCatsService\n\nAppModule -->\n\nCatsService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CatsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CatsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            DatabaseModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { AuthModule } from './module/auth.module';\nimport { DatabaseModule } from './Module/database.module';\nimport { defaultSgy } from './infrastructure/config/app.config';\nimport { CatsService } from './service/cats.service';\nimport { CatsController } from './controller/cats.controller';\nimport { UserProvider } from './provider/user.provider';\n\n@Module({\n  imports: [\n    AuthModule,\n    DatabaseModule,\n    PassportModule.register({ defaultStrategy: defaultSgy }),\n  ],\n  controllers: [CatsController],\n  providers: [...UserProvider, CatsService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controller/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(data: LoginReq)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: '登录'})@Post('login')\n                \n            \n\n            \n                \n                    Defined in src/controller/auth.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                LoginReq\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { LoginUserInfoVO } from './../dto/response/user.vo';\nimport { Controller, Body, Post } from '@nestjs/common';\nimport { LoginReq } from '../dto/request/user.req';\nimport { AuthService } from './../service/auth.service';\nimport { ApiTags, ApiOperation } from '@nestjs/swagger';\n\n@ApiTags('AuthController')\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @ApiOperation({ summary: '登录' })\n  @Post('login')\n  async login(@Body() data: LoginReq): Promise {\n    return await this.authService.login(data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/module/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\nimport { AuthController } from './../controller/auth.controller';\nimport { AuthService } from './../service/auth.service';\nimport { secretKey } from '../infrastructure/config/app.config';\nimport { JwtStrategy } from '../infrastructure/strategy/jwt.strategy';\nimport { UserProvider } from 'src/provider/user.provider';\n\n@Module({\n  imports: [\n    JwtModule.register({\n      privateKey: secretKey,\n      signOptions: {\n        expiresIn: '1h',\n      },\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [...UserProvider, AuthService, JwtStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/service/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                signToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(JwtService: JwtService, userRepository: MongoRepository)\n                    \n                \n                        \n                            \n                                Defined in src/service/auth.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        JwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        MongoRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(data: LoginReq)\n                \n            \n\n\n            \n                \n                    Defined in src/service/auth.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                LoginReq\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            signToken\n                        \n                        \n                    \n                \n            \n            \n                \nsignToken(data: JwtModule)\n                \n            \n\n\n            \n                \n                    Defined in src/service/auth.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            JwtModule\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { JwtModule, JwtService } from '@nestjs/jwt';\nimport { MongoRepository } from 'typeorm';\nimport { Users } from './../entity/user.entity';\nimport { LoginReq } from '../dto/request/user.req';\nimport { ApiException } from './../infrastructure/exception/api.exception';\nimport { LoginUserInfoVO } from './../dto/response/user.vo';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly JwtService: JwtService,\n\n    @Inject('UserRepository')\n    private readonly userRepository: MongoRepository,\n  ) {}\n\n  async login(data: LoginReq) {\n    const { name, password } = data;\n    const entity = await this.userRepository.findOne({\n      username: name,\n      password: password,\n    });\n\n    if (!entity) {\n      throw new ApiException('用户名或密码错误!');\n    }\n\n    const id = entity._id;\n    const payload = { id, name };\n    const token = this.signToken(payload);\n\n    const result: LoginUserInfoVO = {\n      userId: id.toString(),\n      name,\n      token,\n    }\n\n    return result;\n  }\n\n  signToken(data: JwtModule) {\n    return this.JwtService.sign(data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseResponse.html":{"url":"interfaces/BaseResponse.html","title":"interface - BaseResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BaseResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/interceptor/response.success.transform.interceptor.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        code\n                                \n                                \n                                        data\n                                \n                                \n                                        message\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                    \n                                \n                                \n                                    \n                                        code:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { NestInterceptor, ExecutionContext, CallHandler } from '@nestjs/common';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { ApiCode } from '../enum/api.code.enum';\n\nexport interface BaseResponse {\n  code: number;\n  data: T;\n  success: boolean;\n  message: string;\n}\n\nexport class ResponseSuccessTransformInterceptor\n  implements NestInterceptor> {\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable> | Promise>> {\n    return next.handle().pipe(\n      map(data => {\n        return {\n          code: ApiCode.SUCCESS,\n          data,\n          message: '请求成功',\n          success: true,\n        };\n      }),\n    );\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CatVO.html":{"url":"classes/CatVO.html","title":"class - CatVO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CatVO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/response/cat.vo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                age\n                            \n                            \n                                breed\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            age\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: '年龄'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/dto/response/cat.vo.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            breed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: '品种'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/dto/response/cat.vo.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: '名称'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/dto/response/cat.vo.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class CatVO {\n  @ApiProperty({description: '名称' })\n  name: string;\n\n  @ApiProperty({ description: '年龄' })\n  age: number;\n\n  @ApiProperty({description: '品种'})\n  breed: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CatsController.html":{"url":"controllers/CatsController.html","title":"controller - CatsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CatsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controller/cats.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                cats\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createCatDto: CreateCatReq)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: '添加猫'})@Post('/create')\n                \n            \n\n            \n                \n                    Defined in src/controller/cats.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCatDto\n                                    \n                                                CreateCatReq\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: '查询猫列表'})@Post('/queryAll')\n                \n            \n\n            \n                \n                    Defined in src/controller/cats.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         CatVO[]\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Body, Post, UseGuards } from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags, ApiOperation } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\nimport { CatsService } from './../service/cats.service';\nimport { CreateCatReq } from '../dto/request/cat.req';\nimport { CatVO } from 'src/dto/response/cat.vo';\n\n@ApiBearerAuth()\n@ApiTags('CatsController')\n@UseGuards(AuthGuard())\n@Controller('cats')\nexport class CatsController {\n  constructor(private readonly catsService: CatsService) {}\n\n  @ApiOperation({ summary: '添加猫' })\n  @Post('/create')\n  create(@Body() createCatDto: CreateCatReq): void {\n    this.catsService.create(createCatDto);\n  }\n\n  @ApiOperation({ summary: '查询猫列表' })\n  @Post('/queryAll')\n  findAll(): CatVO[] {\n    return this.catsService.findAll();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CatsService.html":{"url":"injectables/CatsService.html","title":"injectable - CatsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CatsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/service/cats.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                cats\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(cat: CatVO)\n                \n            \n\n\n            \n                \n                    Defined in src/service/cats.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cat\n                                    \n                                                CatVO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/service/cats.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         CatVO[]\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            cats\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CatVO[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/service/cats.service.ts:6\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CatVO } from 'src/dto/response/cat.vo';\n\n@Injectable()\nexport class CatsService {\n  private readonly cats: CatVO[] = [];\n\n  create(cat: CatVO) {\n    this.cats.push(cat);\n  }\n\n  findAll(): CatVO[] {\n    return this.cats;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCatReq.html":{"url":"classes/CreateCatReq.html","title":"class - CreateCatReq","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCatReq\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/request/cat.req.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                age\n                            \n                            \n                                breed\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            age\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsInt({message: '年龄必须是数字'})@ApiProperty({required: true, type: Number, example: 2, description: '年龄'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/dto/request/cat.req.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            breed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString({message: '品种必须是字符'})@IsNotEmpty({message: '品种不可为空'})@IsIn(undefined, {message: '不支持该品种'})@ApiProperty({required: true, example: '泰迪', description: '品种', enum: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/dto/request/cat.req.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Length(2, 8, {message: '名称必须2到8字符'})@IsString({message: '名称必须是字符类型'})@IsNotEmpty({message: '名称不可为空'})@ApiProperty({required: true, type: String, example: '小黑', description: '名称', minLength: 2, maxLength: 8})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/dto/request/cat.req.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsInt, IsString, Length, IsNotEmpty, IsIn } from 'class-validator';\n\nexport class CreateCatReq {\n  @Length(2, 8, { message: '名称必须2到8字符' })\n  @IsString({ message: '名称必须是字符类型' })\n  @IsNotEmpty({ message: '名称不可为空' })\n  @ApiProperty({\n    required: true,\n    type: String,\n    example: '小黑',\n    description: '名称',\n    minLength: 2,\n    maxLength: 8,\n  })\n  name: string;\n\n  @IsInt({ message: '年龄必须是数字' })\n  @ApiProperty({\n    required: true,\n    type: Number,\n    example: 2,\n    description: '年龄',\n  })\n  age: number;\n\n  @IsString({ message: '品种必须是字符' })\n  @IsNotEmpty({ message: '品种不可为空' })\n  @IsIn(['泰迪', '柯基'], { message: '不支持该品种' })\n  @ApiProperty({\n    required: true,\n    example: '泰迪',\n    description: '品种',\n    enum: ['泰迪', '柯基'],\n  })\n  breed: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/module/database.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module, Global } from '@nestjs/common';\nimport { databaseProvider } from './../provider/database.provider';\n\n@Global()\n@Module({\n  providers: [...databaseProvider],\n  exports: [...databaseProvider],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/strategy/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: MongoRepository)\n                    \n                \n                        \n                            \n                                Defined in src/infrastructure/strategy/jwt.strategy.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        MongoRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload, done: VerifiedCallback)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/strategy/jwt.strategy.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    done\n                                    \n                                            VerifiedCallback\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException, Inject } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { MongoRepository } from 'typeorm';\nimport { Strategy, ExtractJwt, VerifiedCallback } from 'passport-jwt';\nimport { secretKey } from '../config/app.config';\nimport { Users } from '../../entity/user.entity';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    @Inject('UserRepository')\n    private readonly userRepository: MongoRepository,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: secretKey,\n    });\n  }\n\n  async validate(payload, done: VerifiedCallback) {\n    const { name } = payload;\n    const entity = await this.userRepository.findOne({ username: name });\n\n    if (!entity) {\n      throw new UnauthorizedException('没找到用户!');\n    }\n    return { ...payload };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginReq.html":{"url":"classes/LoginReq.html","title":"class - LoginReq","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginReq\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/request/user.req.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Length(4, 12, {message: '用户名必须是4到12个字符'})@IsString({message: '用户名必须是字符串'})@IsNotEmpty({message: '用户名不可为空'})@ApiProperty({required: true, type: String, example: 'liuhui', description: '用户名', minLength: 4, maxLength: 12})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/dto/request/user.req.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString({message: '密码必须是字符'})@IsNotEmpty({message: '密码不可为空'})@ApiProperty({required: true, example: '$2b$10$InzTTbwNKuB4vQdpSUoMQ.z5TGJLd/em.FaTTxNnkyVMZkMoQRa82', description: '密码'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/dto/request/user.req.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, Length, IsNotEmpty } from 'class-validator';\n\nexport class LoginReq {\n  @Length(4, 12, { message: '用户名必须是4到12个字符' })\n  @IsString({ message: '用户名必须是字符串' })\n  @IsNotEmpty({ message: '用户名不可为空' })\n  @ApiProperty({\n    required: true,\n    type: String,\n    example: 'liuhui',\n    description: '用户名',\n    minLength: 4,\n    maxLength: 12,\n  })\n  name: string;\n\n  @IsString({ message: '密码必须是字符' })\n  @IsNotEmpty({ message: '密码不可为空' })\n  @ApiProperty({\n    required: true,\n    example: '$2b$10$InzTTbwNKuB4vQdpSUoMQ.z5TGJLd/em.FaTTxNnkyVMZkMoQRa82',\n    description: '密码',\n  })\n  password: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginUserInfoVO.html":{"url":"classes/LoginUserInfoVO.html","title":"class - LoginUserInfoVO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginUserInfoVO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/response/user.vo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                token\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: '用户名'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/dto/response/user.vo.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'jwt'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/dto/response/user.vo.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: '用户Id'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/dto/response/user.vo.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class LoginUserInfoVO {\n  @ApiProperty({description: '用户Id'})\n  userId: string;\n\n  @ApiProperty({description: '用户名'})\n  name: string;\n\n  @ApiProperty({description: 'jwt'})\n  token: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ParamsValidationPipe.html":{"url":"classes/ParamsValidationPipe.html","title":"class - ParamsValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ParamsValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/pipe/params.validation.pipe.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            PipeTransform\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                toValidate\n                            \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            toValidate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toValidate(metatype)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/pipe/params.validation.pipe.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    metatype\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: any, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/pipe/params.validation.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { PipeTransform, ArgumentMetadata } from '@nestjs/common';\nimport { ApiException } from '../exception/api.exception';\nimport { plainToClass } from 'class-transformer';\nimport { validate } from 'class-validator';\n\nexport class ParamsValidationPipe implements PipeTransform {\n  async transform(value: any, metadata: ArgumentMetadata) {\n    const { metatype } = metadata;\n\n    // 如果参数不是 类 而是普通的 JavaScript 对象则不进行验证\n    if (!metatype || !this.toValidate(metatype)) {\n      return value;\n    }\n\n    // 通过元数据和对象实例，去构建原有类型\n    const object = plainToClass(metatype, value);\n    const errors = await validate(object);\n\n    if (errors.length > 0) {\n      // 获取到第一个没有通过验证的错误对象\n      let error = errors.shift();\n      let constraints = error.constraints;\n\n      // 将未通过验证的字段的错误信息和状态码，以ApiException的形式抛给我们的全局异常过滤器\n      for (let key in constraints) {\n        throw new ApiException(constraints[key]);\n      }\n    }\n    return value;\n  }\n\n  private toValidate(metatype): boolean {\n    const types = [String, Boolean, Number, Array, Object];\n    return !types.find(type => metatype === type);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResponseErrorExceptionFilter.html":{"url":"classes/ResponseErrorExceptionFilter.html","title":"class - ResponseErrorExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResponseErrorExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/filter/response.error.exception.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/filter/response.error.exception.filter.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            HttpException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentsHost,\n  Catch,\n  ExceptionFilter,\n  HttpException,\n  HttpStatus,\n} from '@nestjs/common';\n\n@Catch(HttpException)\nexport class ResponseErrorExceptionFilter implements ExceptionFilter {\n  catch(exception: HttpException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n\n    const message = exception.message.message || exception.message.error;\n    const errorCode = (exception as any).errorCode;\n    const errorMessage = (exception as any).errorMessage;\n    // console.log('==========exception:',exception)\n    const status =\n      exception instanceof HttpException\n        ? exception.getStatus()\n        : HttpStatus.INTERNAL_SERVER_ERROR;\n\n    const errorResponse = {\n      data: {},\n      message: errorMessage || message,\n      success: false,\n      code: errorCode || status,\n    };\n\n    response.status(status);\n    response.header('Content-Type', 'application/json; charset=utf-8');\n    response.send(errorResponse);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResponseSuccessTransformInterceptor.html":{"url":"classes/ResponseSuccessTransformInterceptor.html","title":"class - ResponseSuccessTransformInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResponseSuccessTransformInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/interceptor/response.success.transform.interceptor.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        NestInterceptor\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/interceptor/response.success.transform.interceptor.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NestInterceptor, ExecutionContext, CallHandler } from '@nestjs/common';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { ApiCode } from '../enum/api.code.enum';\n\nexport interface BaseResponse {\n  code: number;\n  data: T;\n  success: boolean;\n  message: string;\n}\n\nexport class ResponseSuccessTransformInterceptor\n  implements NestInterceptor> {\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable> | Promise>> {\n    return next.handle().pipe(\n      map(data => {\n        return {\n          code: ApiCode.SUCCESS,\n          data,\n          message: '请求成功',\n          success: true,\n        };\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Users.html":{"url":"classes/Users.html","title":"class - Users","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Users\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entity/user.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                apiToken\n                            \n                            \n                                career\n                            \n                            \n                                company\n                            \n                            \n                                email\n                            \n                            \n                                mobile\n                            \n                            \n                                password\n                            \n                            \n                                qq\n                            \n                            \n                                teams\n                            \n                            \n                                token\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectID\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ObjectIdColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/entity/user.entity.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            apiToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/entity/user.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            career\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/entity/user.entity.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            company\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/entity/user.entity.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/entity/user.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mobile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/entity/user.entity.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/entity/user.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            qq\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/entity/user.entity.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/entity/user.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/entity/user.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/entity/user.entity.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Column, ObjectID, ObjectIdColumn } from 'typeorm';\n\n@Entity()\nexport class Users {\n  @ObjectIdColumn()\n  _id: ObjectID;\n\n  @Column()\n  username: string;\n\n  @Column()\n  password: string;\n\n  @Column()\n  email: string;\n\n  @Column()\n  token: string;\n\n  @Column()\n  apiToken: string;\n\n  @Column()\n  teams: Array;\n\n  @Column()\n  mobile: String;\n\n  @Column()\n  qq: String;\n\n  @Column()\n  company: String;\n\n  @Column()\n  career: String;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/controller/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/controller/cats.controller.ts\n            \n            controller\n            CatsController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/dto/request/cat.req.ts\n            \n            class\n            CreateCatReq\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/dto/request/user.req.ts\n            \n            class\n            LoginReq\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/dto/response/cat.vo.ts\n            \n            class\n            CatVO\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/dto/response/user.vo.ts\n            \n            class\n            LoginUserInfoVO\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/entity/user.entity.ts\n            \n            class\n            Users\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/infrastructure/config/app.config.ts\n            \n            variable\n            common\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/infrastructure/config/app.config.ts\n            \n            variable\n            defaultSgy\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/infrastructure/config/app.config.ts\n            \n            variable\n            secretKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/infrastructure/exception/api.exception.ts\n            \n            class\n            ApiException\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/infrastructure/filter/response.error.exception.filter.ts\n            \n            class\n            ResponseErrorExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/infrastructure/interceptor/response.success.transform.interceptor.ts\n            \n            class\n            ResponseSuccessTransformInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/infrastructure/interceptor/response.success.transform.interceptor.ts\n            \n            interface\n            BaseResponse\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/infrastructure/middleware/logger.middleware.ts\n            \n            function\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/infrastructure/pipe/params.validation.pipe.ts\n            \n            class\n            ParamsValidationPipe\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/infrastructure/strategy/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/provider/database.provider.ts\n            \n            variable\n            databaseProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/provider/user.provider.ts\n            \n            variable\n            UserProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/service/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/service/cats.service.ts\n            \n            injectable\n            CatsService\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^6.7.2\n        \n            @nestjs/core : ^6.7.2\n        \n            @nestjs/jwt : ^6.1.1\n        \n            @nestjs/passport : ^6.1.1\n        \n            @nestjs/platform-express : ^6.7.2\n        \n            @nestjs/swagger : ^4.1.7\n        \n            class-transformer : ^0.2.3\n        \n            class-validator : ^0.11.0\n        \n            fastify-swagger : ^2.5.0\n        \n            helmet : ^3.21.2\n        \n            mongodb : ^3.4.1\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.0\n        \n            rxjs : ^6.5.3\n        \n            swagger-ui-express : ^4.1.2\n        \n            typeorm : ^0.2.22\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiCode   (src/.../api.code.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/infrastructure/enum/api.code.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ApiCode\n                    \n                \n                        \n                            \n                                 SUCCESS\n                            \n                        \n                        \n                            \n                                 FAIL\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            logger   (src/.../logger.middleware.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/infrastructure/middleware/logger.middleware.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            logger\n                        \n                        \n                    \n                \n            \n            \n                \nlogger(req, res, next)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nCatsService\n\nCatsService\n\nAppModule -->\n\nCatsService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            common   (src/.../app.config.ts)\n                        \n                        \n                            databaseProvider   (src/.../database.provider.ts)\n                        \n                        \n                            defaultSgy   (src/.../app.config.ts)\n                        \n                        \n                            secretKey   (src/.../app.config.ts)\n                        \n                        \n                            UserProvider   (src/.../user.provider.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/infrastructure/config/app.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            common\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  baseUrl: process.env.FABU_BASE_URL || 'https://package.sit.ihomefnt.org', //baseUrl应用请求的url地址,比如https://package.ihomefnt.com\n  uploadUrl: 'https://unify-file.sit.ihomefnt.org/unifyfile/file/uploadFile',\n  secret: process.env.FABU_SECRET || 'secretsecret', //secret\n  dbUser: process.env.FABU_DBUSER || 'aijia', //数据库用户 (没有开启mongodb用户认证的可以不填写)\n  dbPwd: process.env.FABU_DBPWD || 'aijia1234567', //数据库密码 (没有开启mongodb用户认证的可以不填写)\n  dbName: process.env.FABU_DB_NAME || 'admin', //数据库名称\n  dbHost: process.env.FABU_DB_HOST || 'mongo-01.db.sit.ihomefnt.org', //数据库地址\n  dbPort: 3717,\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultSgy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'jwt'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            secretKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '1AGy4bCUoECDZ4yI6h8DxHDwgj84EqStMNyab8nPChQ='\n                        \n                    \n\n\n            \n        \n\n    src/provider/database.provider.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            databaseProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    provide: 'CommonConnection',\n    useFactory: async () =>\n      await createConnection({\n        type: 'mongodb',\n        host: common.dbHost,\n        port: common.dbPort,\n        username: common.dbUser,\n        password: common.dbPwd,\n        database: common.dbName,\n        entities: [Users],\n        useUnifiedTopology: true,\n      }),\n  },\n]\n                        \n                    \n\n\n            \n        \n\n    src/provider/user.provider.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    provide: 'UserRepository',\n    useFactory: (connection: Connection) =>\n      connection.getMongoRepository(Users),\n    inject: ['CommonConnection'],\n  },\n]\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
